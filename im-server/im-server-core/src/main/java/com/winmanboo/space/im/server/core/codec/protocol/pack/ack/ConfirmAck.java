// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: im-server/im-server-core/src/main/java/com/winmanboo/space/im/server/core/codec/protocol/pack/ack/confirm_ack.proto
// Protobuf Java Version: 4.27.1

package com.winmanboo.space.im.server.core.codec.protocol.pack.ack;

/**
 * Protobuf type {@code com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck}
 */
public final class ConfirmAck extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck)
    ConfirmAckOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 1,
      /* suffix= */ "",
      ConfirmAck.class.getName());
  }
  // Use ConfirmAck.newBuilder() to construct.
  private ConfirmAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ConfirmAck() {
    messageId_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAckProto.internal_static_com_winmanboo_space_im_core_codec_protocol_pack_ack_ConfirmAck_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAckProto.internal_static_com_winmanboo_space_im_core_codec_protocol_pack_ack_ConfirmAck_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck.class, com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck.Builder.class);
  }

  /**
   * Protobuf enum {@code com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck.ResultCode}
   */
  public enum ResultCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FAIL = 0;</code>
     */
    FAIL(0),
    /**
     * <code>OK = 1;</code>
     */
    OK(1),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 1,
        /* suffix= */ "",
        ResultCode.class.getName());
    }
    /**
     * <code>FAIL = 0;</code>
     */
    public static final int FAIL_VALUE = 0;
    /**
     * <code>OK = 1;</code>
     */
    public static final int OK_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResultCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResultCode forNumber(int value) {
      switch (value) {
        case 0: return FAIL;
        case 1: return OK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResultCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResultCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResultCode>() {
            public ResultCode findValueByNumber(int number) {
              return ResultCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck.getDescriptor().getEnumTypes().get(0);
    }

    private static final ResultCode[] VALUES = values();

    public static ResultCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResultCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck.ResultCode)
  }

  /**
   * Protobuf enum {@code com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck.Ack}
   */
  public enum Ack
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACK = 0;</code>
     */
    ACK(0),
    /**
     * <code>SYNC = 1;</code>
     */
    SYNC(1),
    /**
     * <code>MESSAGE = 2;</code>
     */
    MESSAGE(2),
    /**
     * <code>FRIEND_APPLY = 4;</code>
     */
    FRIEND_APPLY(4),
    /**
     * <code>SYSTEM_NOTIFY = 5;</code>
     */
    SYSTEM_NOTIFY(5),
    /**
     * <code>GROUP_APPLY = 6;</code>
     */
    GROUP_APPLY(6),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 1,
        /* suffix= */ "",
        Ack.class.getName());
    }
    /**
     * <code>ACK = 0;</code>
     */
    public static final int ACK_VALUE = 0;
    /**
     * <code>SYNC = 1;</code>
     */
    public static final int SYNC_VALUE = 1;
    /**
     * <code>MESSAGE = 2;</code>
     */
    public static final int MESSAGE_VALUE = 2;
    /**
     * <code>FRIEND_APPLY = 4;</code>
     */
    public static final int FRIEND_APPLY_VALUE = 4;
    /**
     * <code>SYSTEM_NOTIFY = 5;</code>
     */
    public static final int SYSTEM_NOTIFY_VALUE = 5;
    /**
     * <code>GROUP_APPLY = 6;</code>
     */
    public static final int GROUP_APPLY_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Ack valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Ack forNumber(int value) {
      switch (value) {
        case 0: return ACK;
        case 1: return SYNC;
        case 2: return MESSAGE;
        case 4: return FRIEND_APPLY;
        case 5: return SYSTEM_NOTIFY;
        case 6: return GROUP_APPLY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Ack>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Ack> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Ack>() {
            public Ack findValueByNumber(int number) {
              return Ack.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck.getDescriptor().getEnumTypes().get(1);
    }

    private static final Ack[] VALUES = values();

    public static Ack valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Ack(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck.Ack)
  }

  private int bitField0_;
  public static final int ACK_FIELD_NUMBER = 1;
  private int ack_ = 0;
  /**
   * <code>int32 ack = 1;</code>
   * @return The ack.
   */
  @java.lang.Override
  public int getAck() {
    return ack_;
  }

  public static final int MESSAGEID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object messageId_ = "";
  /**
   * <pre>
   * 消息 id（唯一）
   * </pre>
   *
   * <code>string messageId = 2;</code>
   * @return The messageId.
   */
  @java.lang.Override
  public java.lang.String getMessageId() {
    java.lang.Object ref = messageId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      messageId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 消息 id（唯一）
   * </pre>
   *
   * <code>string messageId = 2;</code>
   * @return The bytes for messageId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMessageIdBytes() {
    java.lang.Object ref = messageId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      messageId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RESULTCODE_FIELD_NUMBER = 3;
  private int resultCode_ = 0;
  /**
   * <pre>
   * 状态标志，0-失败,1-成功
   * </pre>
   *
   * <code>int32 resultCode = 3;</code>
   * @return The resultCode.
   */
  @java.lang.Override
  public int getResultCode() {
    return resultCode_;
  }

  public static final int DATA_FIELD_NUMBER = 4;
  private com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack data_;
  /**
   * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
   * @return Whether the data field is set.
   */
  @java.lang.Override
  public boolean hasData() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
   * @return The data.
   */
  @java.lang.Override
  public com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack getData() {
    return data_ == null ? com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.getDefaultInstance() : data_;
  }
  /**
   * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
   */
  @java.lang.Override
  public com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePackOrBuilder getDataOrBuilder() {
    return data_ == null ? com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.getDefaultInstance() : data_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (ack_ != 0) {
      output.writeInt32(1, ack_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(messageId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, messageId_);
    }
    if (resultCode_ != 0) {
      output.writeInt32(3, resultCode_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(4, getData());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (ack_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, ack_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(messageId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, messageId_);
    }
    if (resultCode_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, resultCode_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getData());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck)) {
      return super.equals(obj);
    }
    com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck other = (com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck) obj;

    if (getAck()
        != other.getAck()) return false;
    if (!getMessageId()
        .equals(other.getMessageId())) return false;
    if (getResultCode()
        != other.getResultCode()) return false;
    if (hasData() != other.hasData()) return false;
    if (hasData()) {
      if (!getData()
          .equals(other.getData())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ACK_FIELD_NUMBER;
    hash = (53 * hash) + getAck();
    hash = (37 * hash) + MESSAGEID_FIELD_NUMBER;
    hash = (53 * hash) + getMessageId().hashCode();
    hash = (37 * hash) + RESULTCODE_FIELD_NUMBER;
    hash = (53 * hash) + getResultCode();
    if (hasData()) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck)
      com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAckOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAckProto.internal_static_com_winmanboo_space_im_core_codec_protocol_pack_ack_ConfirmAck_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAckProto.internal_static_com_winmanboo_space_im_core_codec_protocol_pack_ack_ConfirmAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck.class, com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck.Builder.class);
    }

    // Construct using com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getDataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      ack_ = 0;
      messageId_ = "";
      resultCode_ = 0;
      data_ = null;
      if (dataBuilder_ != null) {
        dataBuilder_.dispose();
        dataBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAckProto.internal_static_com_winmanboo_space_im_core_codec_protocol_pack_ack_ConfirmAck_descriptor;
    }

    @java.lang.Override
    public com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck getDefaultInstanceForType() {
      return com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck.getDefaultInstance();
    }

    @java.lang.Override
    public com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck build() {
      com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck buildPartial() {
      com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck result = new com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.ack_ = ack_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.messageId_ = messageId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.resultCode_ = resultCode_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.data_ = dataBuilder_ == null
            ? data_
            : dataBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck) {
        return mergeFrom((com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck other) {
      if (other == com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck.getDefaultInstance()) return this;
      if (other.getAck() != 0) {
        setAck(other.getAck());
      }
      if (!other.getMessageId().isEmpty()) {
        messageId_ = other.messageId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.getResultCode() != 0) {
        setResultCode(other.getResultCode());
      }
      if (other.hasData()) {
        mergeData(other.getData());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              ack_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              messageId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              resultCode_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              input.readMessage(
                  getDataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int ack_ ;
    /**
     * <code>int32 ack = 1;</code>
     * @return The ack.
     */
    @java.lang.Override
    public int getAck() {
      return ack_;
    }
    /**
     * <code>int32 ack = 1;</code>
     * @param value The ack to set.
     * @return This builder for chaining.
     */
    public Builder setAck(int value) {

      ack_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>int32 ack = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearAck() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ack_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object messageId_ = "";
    /**
     * <pre>
     * 消息 id（唯一）
     * </pre>
     *
     * <code>string messageId = 2;</code>
     * @return The messageId.
     */
    public java.lang.String getMessageId() {
      java.lang.Object ref = messageId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        messageId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 消息 id（唯一）
     * </pre>
     *
     * <code>string messageId = 2;</code>
     * @return The bytes for messageId.
     */
    public com.google.protobuf.ByteString
        getMessageIdBytes() {
      java.lang.Object ref = messageId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        messageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 消息 id（唯一）
     * </pre>
     *
     * <code>string messageId = 2;</code>
     * @param value The messageId to set.
     * @return This builder for chaining.
     */
    public Builder setMessageId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      messageId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 消息 id（唯一）
     * </pre>
     *
     * <code>string messageId = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMessageId() {
      messageId_ = getDefaultInstance().getMessageId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 消息 id（唯一）
     * </pre>
     *
     * <code>string messageId = 2;</code>
     * @param value The bytes for messageId to set.
     * @return This builder for chaining.
     */
    public Builder setMessageIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      messageId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int resultCode_ ;
    /**
     * <pre>
     * 状态标志，0-失败,1-成功
     * </pre>
     *
     * <code>int32 resultCode = 3;</code>
     * @return The resultCode.
     */
    @java.lang.Override
    public int getResultCode() {
      return resultCode_;
    }
    /**
     * <pre>
     * 状态标志，0-失败,1-成功
     * </pre>
     *
     * <code>int32 resultCode = 3;</code>
     * @param value The resultCode to set.
     * @return This builder for chaining.
     */
    public Builder setResultCode(int value) {

      resultCode_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 状态标志，0-失败,1-成功
     * </pre>
     *
     * <code>int32 resultCode = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearResultCode() {
      bitField0_ = (bitField0_ & ~0x00000004);
      resultCode_ = 0;
      onChanged();
      return this;
    }

    private com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack data_;
    private com.google.protobuf.SingleFieldBuilder<
        com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack, com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.Builder, com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePackOrBuilder> dataBuilder_;
    /**
     * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
     * @return Whether the data field is set.
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
     * @return The data.
     */
    public com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack getData() {
      if (dataBuilder_ == null) {
        return data_ == null ? com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.getDefaultInstance() : data_;
      } else {
        return dataBuilder_.getMessage();
      }
    }
    /**
     * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
     */
    public Builder setData(com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
      } else {
        dataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
     */
    public Builder setData(
        com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.Builder builderForValue) {
      if (dataBuilder_ == null) {
        data_ = builderForValue.build();
      } else {
        dataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
     */
    public Builder mergeData(com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack value) {
      if (dataBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          data_ != null &&
          data_ != com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.getDefaultInstance()) {
          getDataBuilder().mergeFrom(value);
        } else {
          data_ = value;
        }
      } else {
        dataBuilder_.mergeFrom(value);
      }
      if (data_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
     */
    public Builder clearData() {
      bitField0_ = (bitField0_ & ~0x00000008);
      data_ = null;
      if (dataBuilder_ != null) {
        dataBuilder_.dispose();
        dataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
     */
    public com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.Builder getDataBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getDataFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
     */
    public com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePackOrBuilder getDataOrBuilder() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilder();
      } else {
        return data_ == null ?
            com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.getDefaultInstance() : data_;
      }
    }
    /**
     * <code>.com.winmanboo.space.im.core.codec.protocol.pack.ack.MessagePack data = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack, com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.Builder, com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePackOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack, com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePack.Builder, com.winmanboo.space.im.server.core.codec.protocol.pack.ack.MessagePackOrBuilder>(
                getData(),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck)
  }

  // @@protoc_insertion_point(class_scope:com.winmanboo.space.im.core.codec.protocol.pack.ack.ConfirmAck)
  private static final com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck();
  }

  public static com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConfirmAck>
      PARSER = new com.google.protobuf.AbstractParser<ConfirmAck>() {
    @java.lang.Override
    public ConfirmAck parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ConfirmAck> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConfirmAck> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.winmanboo.space.im.server.core.codec.protocol.pack.ack.ConfirmAck getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

